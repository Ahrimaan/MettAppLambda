service: chaosmett-api
plugins:
  - serverless-webpack 
  - serverless-offline
custom:
  webpackIncludeModules: true
  serverless-offline: 
    host: "192.168.2.19"
provider: 
  name: aws
  memorySize: 128
  runtime: nodejs6.10
  stage: prod
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"
functions:
  auth:
    handler: authenticate.auth
    cors: true
  getEvents:
    handler: getEvents.main
    events:
      - http: 
          path: events/{id}
          method: get
          cors: true
          authorizer: auth
  createEvent:
    handler: createEvent.main
    events:
      - http: 
          path: events
          method: post
          cors: true
          authorizer: auth
  getUserInformation:
    handler: getUserInformation.main
    events:
      - http: 
          path: user/{id}
          method: get
          cors: true
          authorizer: auth
  getTenants:
    handler: getTenants.main
    events:
      - http: 
          path: tenant
          method: get
          cors: true
          authorizer: auth
  addUserInformation:
    handler: addUserInformation.main
    events:
      - http: 
          path: user
          method: post
          cors: true
          authorizer: auth
  updateUserInformation:
    handler: updateUserInformation.main
    events:
      - http: 
          path: user
          method: put
          cors: true
          authorizer: auth
resources:
  Resources:
    # This response is needed for custom authorizer failures cors support ¯\_(ツ)_/¯
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: EXPIRED_TOKEN
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'      